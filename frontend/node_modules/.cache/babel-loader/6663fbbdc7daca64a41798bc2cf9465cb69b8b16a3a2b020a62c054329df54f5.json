{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thoma\\\\Documents\\\\Code\\\\sb-digital-legacy-v2.1\\\\frontend\\\\src\\\\pages\\\\SignupPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Button from '../components/Button';\nimport FormInput from '../components/FormInput';\nimport { supabase } from '../supabaseClient'; // Import Supabase\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignupPage() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleSignup = async () => {\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const {\n        data,\n        error: signUpError\n      } = await supabase.auth.signUp({\n        email,\n        password,\n        options: {\n          data: {\n            first_name: firstName,\n            last_name: lastName,\n            phone: phone\n          }\n        }\n      });\n      if (signUpError) {\n        console.error('Signup error:', signUpError.message);\n        setError(signUpError.message);\n      } else {\n        console.log('Signup successful:', data);\n        alert('Signup successful! Check your email to confirm.');\n        navigate('/login'); // Or a confirmation page\n      }\n    } catch (err) {\n      console.error('Signup error:', err.message);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSignInWithGoogle = async () => {\n    setError(null);\n    try {\n      const {\n        error: googleSignInError\n      } = await supabase.auth.signInWithOAuth({\n        provider: 'google'\n      });\n      if (googleSignInError) {\n        console.error('Error signing in with Google:', googleSignInError);\n        setError(googleSignInError.message);\n      } else {\n        console.log('Redirecting to Google for sign-in...');\n      }\n    } catch (err) {\n      setError(\"Unexpected error during Google sign in\");\n      console.error(\"Unexpected error\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n      type: \"text\",\n      placeholder: \"First Name\",\n      value: firstName,\n      onChange: e => setFirstName(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n      type: \"text\",\n      placeholder: \"Last Name\",\n      value: lastName,\n      onChange: e => setLastName(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n      type: \"tel\",\n      placeholder: \"Phone Number (Optional)\",\n      value: phone,\n      onChange: e => setPhone(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignInWithGoogle,\n      children: \"Sign in with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSignup,\n      disabled: loading,\n      children: loading ? 'Signing up...' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(SignupPage, \"Ou46+5raeHEOmtgVnlymS1V3euY=\", false, function () {\n  return [useNavigate];\n});\n_c = SignupPage;\nexport default SignupPage;\nvar _c;\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"names":["React","useState","Link","useNavigate","Button","FormInput","supabase","jsxDEV","_jsxDEV","SignupPage","_s","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","firstName","setFirstName","lastName","setLastName","phone","setPhone","error","setError","loading","setLoading","navigate","handleSignup","data","signUpError","auth","signUp","options","first_name","last_name","console","message","log","alert","err","handleSignInWithGoogle","googleSignInError","signInWithOAuth","provider","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","required","onClick","disabled","className","to","_c","$RefreshReg$"],"sources":["C:/Users/thoma/Documents/Code/sb-digital-legacy-v2.1/frontend/src/pages/SignupPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Button from '../components/Button';\r\nimport FormInput from '../components/FormInput';\r\nimport { supabase } from '../supabaseClient'; // Import Supabase\r\n\r\nfunction SignupPage() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSignup = async () => {\r\n    if (password !== confirmPassword) {\r\n      setError(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const { data, error: signUpError } = await supabase.auth.signUp({\r\n        email,\r\n        password,\r\n        options: {\r\n          data: {\r\n            first_name: firstName,\r\n            last_name: lastName,\r\n            phone: phone,\r\n          },\r\n        },\r\n      });\r\n\r\n      if (signUpError) {\r\n        console.error('Signup error:', signUpError.message);\r\n        setError(signUpError.message);\r\n      } else {\r\n        console.log('Signup successful:', data);\r\n        alert('Signup successful! Check your email to confirm.');\r\n        navigate('/login'); // Or a confirmation page\r\n      }\r\n    } catch (err) {\r\n      console.error('Signup error:', err.message);\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSignInWithGoogle = async () => {\r\n    setError(null);\r\n    try {\r\n      const { error: googleSignInError } = await supabase.auth.signInWithOAuth({\r\n        provider: 'google',\r\n      });\r\n\r\n      if (googleSignInError) {\r\n        console.error('Error signing in with Google:', googleSignInError);\r\n        setError(googleSignInError.message);\r\n      } else {\r\n        console.log('Redirecting to Google for sign-in...');\r\n      }\r\n    } catch (err) {\r\n      setError(\"Unexpected error during Google sign in\");\r\n      console.error(\"Unexpected error\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Sign Up</h2>\r\n      <FormInput\r\n        type=\"text\"\r\n        placeholder=\"First Name\"\r\n        value={firstName}\r\n        onChange={(e) => setFirstName(e.target.value)}\r\n        required\r\n      />\r\n      <FormInput\r\n        type=\"text\"\r\n        placeholder=\"Last Name\"\r\n        value={lastName}\r\n        onChange={(e) => setLastName(e.target.value)}\r\n        required\r\n      />\r\n      <FormInput\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        required\r\n      />\r\n      <FormInput\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        required\r\n      />\r\n      <FormInput\r\n        type=\"password\"\r\n        placeholder=\"Confirm Password\"\r\n        value={confirmPassword}\r\n        onChange={(e) => setConfirmPassword(e.target.value)}\r\n        required\r\n      />\r\n      <FormInput\r\n        type=\"tel\"\r\n        placeholder=\"Phone Number (Optional)\"\r\n        value={phone}\r\n        onChange={(e) => setPhone(e.target.value)}\r\n      />\r\n      <button onClick={handleSignInWithGoogle}>Sign in with Google</button>\r\n      <Button onClick={handleSignup} disabled={loading}>\r\n        {loading ? 'Signing up...' : 'Sign Up'}\r\n      </Button>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      <p>\r\n        Already have an account? <Link to=\"/login\">Log In</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignupPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}