{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thoma\\\\Documents\\\\Code\\\\sb-digital-legacy-v2.1\\\\frontend\\\\src\\\\pages\\\\AccountPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../App';\nimport supabase from '../supabaseClient';\nimport FormInput from '../components/FormInput';\nimport Button from '../components/Button';\nimport { signInWithGoogle } from '../supabaseClient';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AccountPage = () => {\n  _s();\n  var _session$user2, _session$user3, _session$user4;\n  const {\n    session\n  } = useAuth();\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [updateLoading, setUpdateLoading] = useState(false);\n  const [updateError, setUpdateError] = useState(null);\n  const [updateSuccess, setUpdateSuccess] = useState(null);\n  const [newEmail, setNewEmail] = useState('');\n  const [updateEmailLoading, setUpdateEmailLoading] = useState(false);\n  const [updateEmailError, setUpdateEmailError] = useState(null);\n  const [updateEmailSuccess, setUpdateEmailSuccess] = useState(null);\n  const [isGoogleUser, setIsGoogleUser] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    var _session$user;\n    const fetchUserData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const {\n          data: {\n            user\n          },\n          error: userError\n        } = await supabase.auth.getUser();\n        if (userError) {\n          setError(userError.message);\n          return;\n        }\n        if (user) {\n          var _user$user_metadata, _user$user_metadata2, _user$user_metadata3, _sessionData$data, _sessionData$data$use, _sessionData$data$use2;\n          setUser(user);\n          setFirstName(((_user$user_metadata = user.user_metadata) === null || _user$user_metadata === void 0 ? void 0 : _user$user_metadata.first_name) || '');\n          setLastName(((_user$user_metadata2 = user.user_metadata) === null || _user$user_metadata2 === void 0 ? void 0 : _user$user_metadata2.last_name) || '');\n          setPhone(((_user$user_metadata3 = user.user_metadata) === null || _user$user_metadata3 === void 0 ? void 0 : _user$user_metadata3.phone) || '');\n\n          // Check for Google sign-in\n          const sessionData = await supabase.auth.getSession();\n          if (sessionData !== null && sessionData !== void 0 && (_sessionData$data = sessionData.data) !== null && _sessionData$data !== void 0 && (_sessionData$data$use = _sessionData$data.user) !== null && _sessionData$data$use !== void 0 && (_sessionData$data$use2 = _sessionData$data$use.identities) !== null && _sessionData$data$use2 !== void 0 && _sessionData$data$use2.some(id => id.provider === 'google')) {\n            setIsGoogleUser(true);\n          } else {\n            setIsGoogleUser(false);\n          }\n        }\n      } catch (error) {\n        setError(error.message);\n        console.error('Error fetching user data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (session !== null && session !== void 0 && (_session$user = session.user) !== null && _session$user !== void 0 && _session$user.id) {\n      fetchUserData();\n    } else {\n      setLoading(false);\n    }\n  }, [session === null || session === void 0 ? void 0 : (_session$user2 = session.user) === null || _session$user2 === void 0 ? void 0 : _session$user2.id]);\n  const goToDashboard = () => {\n    navigate('/dashboard');\n  };\n  const handleUpdateProfile = async () => {\n    setUpdateLoading(true);\n    setUpdateError(null);\n    setUpdateSuccess(null);\n    try {\n      const {\n        error: updateError\n      } = await supabase.auth.updateUser({\n        data: {\n          first_name: firstName,\n          last_name: lastName,\n          phone: phone\n        }\n      });\n      if (updateError) {\n        setUpdateError(updateError.message);\n        return;\n      }\n      setUpdateSuccess('Profile updated successfully!');\n      setUser({\n        ...user,\n        user_metadata: {\n          ...user.user_metadata,\n          first_name: firstName,\n          last_name: lastName,\n          phone: phone\n        }\n      });\n    } catch (error) {\n      setUpdateError(error.message);\n      console.error('Error updating profile:', error);\n    } finally {\n      setUpdateLoading(false);\n    }\n  };\n  const handleUpdateEmail = async () => {\n    setUpdateEmailLoading(true);\n    setUpdateEmailError(null);\n    setUpdateEmailSuccess(null);\n    if (!newEmail) {\n      setUpdateEmailError('Please enter a new email address.');\n      setUpdateEmailLoading(false);\n      return;\n    }\n    try {\n      const {\n        error: updateEmailError\n      } = await supabase.auth.updateUser({\n        email: newEmail\n      });\n      if (updateEmailError) {\n        setUpdateEmailError(updateEmailError.message);\n        return;\n      }\n      setUpdateEmailSuccess('Verification email sent to your new address. Please confirm to update.');\n      setNewEmail('');\n    } catch (error) {\n      setUpdateEmailError(error.message);\n      console.error('Error updating email:', error);\n    } finally {\n      setUpdateEmailLoading(false);\n    }\n  };\n  const handleSignInWithGoogle = async () => {\n    setError(null);\n    try {\n      const {\n        error: googleSignInError\n      } = await signInWithGoogle();\n      if (googleSignInError) {\n        setError(googleSignInError.message);\n        console.error('Error signing in with Google:', googleSignInError);\n      } else {\n        console.log('Redirecting to Google for sign-in...');\n      }\n    } catch (err) {\n      setError('Unexpected error during Google sign in');\n      console.error('Unexpected error', err);\n    }\n  };\n  if (!session) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Not authenticated. Redirecting...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 12\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading user data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User ID: \", session === null || session === void 0 ? void 0 : (_session$user3 = session.user) === null || _session$user3 === void 0 ? void 0 : _session$user3.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        placeholder: \"First Name\",\n        value: firstName,\n        onChange: e => setFirstName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        placeholder: \"Last Name\",\n        value: lastName,\n        onChange: e => setLastName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"tel\",\n        placeholder: \"Phone Number (Optional)\",\n        value: phone,\n        onChange: e => setPhone(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleUpdateProfile,\n        disabled: updateLoading,\n        children: updateLoading ? 'Updating...' : 'Update Profile'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), updateError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: updateError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }, this), updateSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success\",\n        children: updateSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Update Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Email: \", session === null || session === void 0 ? void 0 : (_session$user4 = session.user) === null || _session$user4 === void 0 ? void 0 : _session$user4.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), isGoogleUser ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You can not change your email address because you are logged in with a\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://myaccount.google.com/\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Google Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"New Email Address\",\n          value: newEmail,\n          onChange: e => setNewEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleUpdateEmail,\n          disabled: updateEmailLoading,\n          children: updateEmailLoading ? 'Sending Verification...' : 'Update Email'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), updateEmailError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: updateEmailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 34\n        }, this), updateEmailSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"success\",\n          children: updateEmailSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignInWithGoogle,\n      children: \"Sign in with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goToDashboard,\n      children: \"Back to Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountPage, \"6HPVZXdy817ddTysuUyfxCk6NBU=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = AccountPage;\nexport default AccountPage;\nvar _c;\n$RefreshReg$(_c, \"AccountPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useAuth","supabase","FormInput","Button","signInWithGoogle","jsxDEV","_jsxDEV","Fragment","_Fragment","AccountPage","_s","_session$user2","_session$user3","_session$user4","session","navigate","user","setUser","firstName","setFirstName","lastName","setLastName","phone","setPhone","loading","setLoading","updateLoading","setUpdateLoading","updateError","setUpdateError","updateSuccess","setUpdateSuccess","newEmail","setNewEmail","updateEmailLoading","setUpdateEmailLoading","updateEmailError","setUpdateEmailError","updateEmailSuccess","setUpdateEmailSuccess","isGoogleUser","setIsGoogleUser","error","setError","_session$user","fetchUserData","data","userError","auth","getUser","message","_user$user_metadata","_user$user_metadata2","_user$user_metadata3","_sessionData$data","_sessionData$data$use","_sessionData$data$use2","user_metadata","first_name","last_name","sessionData","getSession","identities","some","id","provider","console","goToDashboard","handleUpdateProfile","updateUser","handleUpdateEmail","email","handleSignInWithGoogle","googleSignInError","log","err","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","className","href","rel","_c","$RefreshReg$"],"sources":["C:/Users/thoma/Documents/Code/sb-digital-legacy-v2.1/frontend/src/pages/AccountPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../App';\r\nimport supabase from '../supabaseClient';\r\nimport FormInput from '../components/FormInput';\r\nimport Button from '../components/Button';\r\nimport { signInWithGoogle } from '../supabaseClient';\r\n\r\nconst AccountPage = () => {\r\n  const { session } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [user, setUser] = useState(null);\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [updateLoading, setUpdateLoading] = useState(false);\r\n  const [updateError, setUpdateError] = useState(null);\r\n  const [updateSuccess, setUpdateSuccess] = useState(null);\r\n  const [newEmail, setNewEmail] = useState('');\r\n  const [updateEmailLoading, setUpdateEmailLoading] = useState(false);\r\n  const [updateEmailError, setUpdateEmailError] = useState(null);\r\n  const [updateEmailSuccess, setUpdateEmailSuccess] = useState(null);\r\n  const [isGoogleUser, setIsGoogleUser] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      try {\r\n        const {\r\n          data: { user },\r\n          error: userError,\r\n        } = await supabase.auth.getUser();\r\n        if (userError) {\r\n          setError(userError.message);\r\n          return;\r\n        }\r\n        if (user) {\r\n          setUser(user);\r\n          setFirstName(user.user_metadata?.first_name || '');\r\n          setLastName(user.user_metadata?.last_name || '');\r\n          setPhone(user.user_metadata?.phone || '');\r\n\r\n          // Check for Google sign-in\r\n          const sessionData = await supabase.auth.getSession();\r\n          if (\r\n            sessionData?.data?.user?.identities?.some(\r\n              (id) => id.provider === 'google'\r\n            )\r\n          ) {\r\n            setIsGoogleUser(true);\r\n          } else {\r\n            setIsGoogleUser(false);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        setError(error.message);\r\n        console.error('Error fetching user data:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (session?.user?.id) {\r\n      fetchUserData();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [session?.user?.id]);\r\n\r\n  const goToDashboard = () => {\r\n    navigate('/dashboard');\r\n  };\r\n\r\n  const handleUpdateProfile = async () => {\r\n    setUpdateLoading(true);\r\n    setUpdateError(null);\r\n    setUpdateSuccess(null);\r\n    try {\r\n      const { error: updateError } = await supabase.auth.updateUser({\r\n        data: {\r\n          first_name: firstName,\r\n          last_name: lastName,\r\n          phone: phone,\r\n        },\r\n      });\r\n      if (updateError) {\r\n        setUpdateError(updateError.message);\r\n        return;\r\n      }\r\n      setUpdateSuccess('Profile updated successfully!');\r\n      setUser({\r\n        ...user,\r\n        user_metadata: {\r\n          ...user.user_metadata,\r\n          first_name: firstName,\r\n          last_name: lastName,\r\n          phone: phone,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      setUpdateError(error.message);\r\n      console.error('Error updating profile:', error);\r\n    } finally {\r\n      setUpdateLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUpdateEmail = async () => {\r\n    setUpdateEmailLoading(true);\r\n    setUpdateEmailError(null);\r\n    setUpdateEmailSuccess(null);\r\n    if (!newEmail) {\r\n      setUpdateEmailError('Please enter a new email address.');\r\n      setUpdateEmailLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const { error: updateEmailError } = await supabase.auth.updateUser({\r\n        email: newEmail,\r\n      });\r\n      if (updateEmailError) {\r\n        setUpdateEmailError(updateEmailError.message);\r\n        return;\r\n      }\r\n      setUpdateEmailSuccess(\r\n        'Verification email sent to your new address. Please confirm to update.'\r\n      );\r\n      setNewEmail('');\r\n    } catch (error) {\r\n      setUpdateEmailError(error.message);\r\n      console.error('Error updating email:', error);\r\n    } finally {\r\n      setUpdateEmailLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSignInWithGoogle = async () => {\r\n    setError(null);\r\n    try {\r\n      const { error: googleSignInError } = await signInWithGoogle();\r\n      if (googleSignInError) {\r\n        setError(googleSignInError.message);\r\n        console.error('Error signing in with Google:', googleSignInError);\r\n      } else {\r\n        console.log('Redirecting to Google for sign-in...');\r\n      }\r\n    } catch (err) {\r\n      setError('Unexpected error during Google sign in');\r\n      console.error('Unexpected error', err);\r\n    }\r\n  };\r\n\r\n  if (!session) {\r\n    return <div>Not authenticated. Redirecting...</div>;\r\n  }\r\n  if (loading) {\r\n    return <div>Loading user data...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>My Account</h1>\r\n      <p>User ID: {session?.user?.id}</p>\r\n\r\n      <div>\r\n        <h2>Update Profile</h2>\r\n        <FormInput\r\n          type=\"text\"\r\n          placeholder=\"First Name\"\r\n          value={firstName}\r\n          onChange={(e) => setFirstName(e.target.value)}\r\n        />\r\n        <FormInput\r\n          type=\"text\"\r\n          placeholder=\"Last Name\"\r\n          value={lastName}\r\n          onChange={(e) => setLastName(e.target.value)}\r\n        />\r\n        <FormInput\r\n          type=\"tel\"\r\n          placeholder=\"Phone Number (Optional)\"\r\n          value={phone}\r\n          onChange={(e) => setPhone(e.target.value)}\r\n        />\r\n        <Button onClick={handleUpdateProfile} disabled={updateLoading}>\r\n          {updateLoading ? 'Updating...' : 'Update Profile'}\r\n        </Button>\r\n        {updateError && <p className=\"error\">{updateError}</p>}\r\n        {updateSuccess && <p className=\"success\">{updateSuccess}</p>}\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Update Email</h2>\r\n        <p>Current Email: {session?.user?.email}</p>\r\n        {isGoogleUser ? (\r\n          <p>\r\n            You can not change your email address because you are logged in with a\r\n            <a\r\n              href=\"https://myaccount.google.com/\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Google Account\r\n            </a>.\r\n          </p>\r\n        ) : (\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"New Email Address\"\r\n              value={newEmail}\r\n              onChange={(e) => setNewEmail(e.target.value)}\r\n            />\r\n            <Button\r\n              onClick={handleUpdateEmail}\r\n              disabled={updateEmailLoading}\r\n            >\r\n              {updateEmailLoading ? 'Sending Verification...' : 'Update Email'}\r\n            </Button>\r\n            {updateEmailError && <p className=\"error\">{updateEmailError}</p>}\r\n            {updateEmailSuccess && (\r\n              <p className=\"success\">{updateEmailSuccess}</p>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n      <button onClick={handleSignInWithGoogle}>Sign in with Google</button>\r\n      <button onClick={goToDashboard}>Back to Dashboard</button>\r\n      {error && <p className=\"error\">{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}