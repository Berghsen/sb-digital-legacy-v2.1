{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thoma\\\\Documents\\\\Code\\\\sb-digital-legacy-v2.1\\\\frontend\\\\src\\\\pages\\\\SignupPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Button from '../components/Button';\nimport FormInput from '../components/FormInput';\nimport supabase from '../supabaseClient'; // Import the default export\nimport { signInWithGoogle } from '../supabaseClient'; // Import the named export\nimport CountryDropdown from '../components/CountryDropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignupPage() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [country, setCountry] = useState('');\n  const [countries, setCountries] = useState([]); // State to hold fetched countries\n  const [phone, setPhone] = useState('');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [fetchError, setFetchError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchCountries = async () => {\n      setLoading(true);\n      setFetchError(null);\n      try {\n        const response = await fetch('https://restcountries.com/v3.1/all');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        const formattedCountries = data.map(country => ({\n          name: country.name.common,\n          code: country.cca2 // Optional: You can use the code if needed\n        }));\n        setCountries(formattedCountries);\n      } catch (error) {\n        setFetchError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCountries();\n  }, []);\n  const handleCountryChange = event => {\n    setCountry(event.target.value);\n  };\n  const handleSignup = async () => {\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const {\n        data,\n        error: signUpError\n      } = await supabase.auth.signUp({\n        email,\n        password,\n        options: {\n          data: {\n            first_name: firstName,\n            last_name: lastName,\n            phone: phone,\n            country: country // Save the selected country\n          }\n        }\n      });\n      if (signUpError) {\n        console.error('Signup error:', signUpError.message);\n        setError(signUpError.message);\n      } else {\n        console.log('Signup successful:', data);\n        alert('Signup successful! Check your email to confirm.');\n        navigate('/login'); // Or a confirmation page\n      }\n    } catch (err) {\n      console.error('Signup error:', err.message);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSignInWithGoogle = async () => {\n    setError(null);\n    try {\n      const {\n        error: googleSignInError\n      } = await supabase.auth.signInWithOAuth({\n        provider: 'google'\n      });\n      if (googleSignInError) {\n        console.error('Error signing in with Google:', googleSignInError);\n        setError(googleSignInError.message);\n      } else {\n        console.log('Redirecting to Google for sign-in...');\n      }\n    } catch (err) {\n      setError(\"Unexpected error during Google sign in\");\n      console.error(\"Unexpected error\", err);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading countries...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 12\n    }, this);\n  }\n  if (fetchError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error fetching countries: \", fetchError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n      type: \"text\",\n      placeholder: \"First Name\",\n      value: firstName,\n      onChange: e => setFirstName(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n      type: \"text\",\n      placeholder: \"Last Name\",\n      value: lastName,\n      onChange: e => setLastName(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n      type: \"tel\",\n      placeholder: \"Phone Number (Optional)\",\n      value: phone,\n      onChange: e => setPhone(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CountryDropdown, {\n      label: \"Country\",\n      value: country,\n      onChange: handleCountryChange,\n      countries: countries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSignup,\n      disabled: loading,\n      children: loading ? 'Signing up...' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignInWithGoogle,\n      children: \"Sign in with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(SignupPage, \"nNZqAIt9N6xVXTevRdeTJMRYXcA=\", false, function () {\n  return [useNavigate];\n});\n_c = SignupPage;\nexport default SignupPage;\nvar _c;\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","Button","FormInput","supabase","signInWithGoogle","CountryDropdown","jsxDEV","_jsxDEV","SignupPage","_s","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","firstName","setFirstName","lastName","setLastName","country","setCountry","countries","setCountries","phone","setPhone","error","setError","loading","setLoading","fetchError","setFetchError","navigate","fetchCountries","response","fetch","ok","Error","status","data","json","formattedCountries","map","name","common","code","cca2","message","handleCountryChange","event","target","value","handleSignup","signUpError","auth","signUp","options","first_name","last_name","console","log","alert","err","handleSignInWithGoogle","googleSignInError","signInWithOAuth","provider","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","required","label","onClick","disabled","className","to","_c","$RefreshReg$"],"sources":["C:/Users/thoma/Documents/Code/sb-digital-legacy-v2.1/frontend/src/pages/SignupPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Button from '../components/Button';\r\nimport FormInput from '../components/FormInput';\r\nimport supabase from '../supabaseClient'; // Import the default export\r\nimport { signInWithGoogle } from '../supabaseClient'; // Import the named export\r\nimport CountryDropdown from '../components/CountryDropdown';\r\n\r\nfunction SignupPage() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [country, setCountry] = useState('');\r\n  const [countries, setCountries] = useState([]); // State to hold fetched countries\r\n  const [phone, setPhone] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [fetchError, setFetchError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchCountries = async () => {\r\n      setLoading(true);\r\n      setFetchError(null);\r\n      try {\r\n        const response = await fetch('https://restcountries.com/v3.1/all');\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        const formattedCountries = data.map((country) => ({\r\n          name: country.name.common,\r\n          code: country.cca2, // Optional: You can use the code if needed\r\n        }));\r\n        setCountries(formattedCountries);\r\n      } catch (error) {\r\n        setFetchError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCountries();\r\n  }, []);\r\n\r\n  const handleCountryChange = (event) => {\r\n    setCountry(event.target.value);\r\n  };\r\n\r\n  const handleSignup = async () => {\r\n    if (password !== confirmPassword) {\r\n      setError(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const { data, error: signUpError } = await supabase.auth.signUp({\r\n        email,\r\n        password,\r\n        options: {\r\n          data: {\r\n            first_name: firstName,\r\n            last_name: lastName,\r\n            phone: phone,\r\n            country: country, // Save the selected country\r\n          },\r\n        },\r\n      });\r\n\r\n      if (signUpError) {\r\n        console.error('Signup error:', signUpError.message);\r\n        setError(signUpError.message);\r\n      } else {\r\n        console.log('Signup successful:', data);\r\n        alert('Signup successful! Check your email to confirm.');\r\n        navigate('/login'); // Or a confirmation page\r\n      }\r\n    } catch (err) {\r\n      console.error('Signup error:', err.message);\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSignInWithGoogle = async () => {\r\n    setError(null);\r\n    try {\r\n      const { error: googleSignInError } = await supabase.auth.signInWithOAuth({\r\n        provider: 'google',\r\n      });\r\n\r\n      if (googleSignInError) {\r\n        console.error('Error signing in with Google:', googleSignInError);\r\n        setError(googleSignInError.message);\r\n      } else {\r\n        console.log('Redirecting to Google for sign-in...');\r\n      }\r\n    } catch (err) {\r\n      setError(\"Unexpected error during Google sign in\");\r\n      console.error(\"Unexpected error\", err);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading countries...</div>;\r\n  }\r\n\r\n  if (fetchError) {\r\n    return <div>Error fetching countries: {fetchError}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Sign Up</h2>\r\n      <FormInput\r\n        type=\"text\"\r\n        placeholder=\"First Name\"\r\n        value={firstName}\r\n        onChange={(e) => setFirstName(e.target.value)}\r\n        required\r\n      />\r\n      <FormInput\r\n        type=\"text\"\r\n        placeholder=\"Last Name\"\r\n        value={lastName}\r\n        onChange={(e) => setLastName(e.target.value)}\r\n        required\r\n      />\r\n      <FormInput\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        required\r\n      />\r\n      <FormInput\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        required\r\n      />\r\n      <FormInput\r\n        type=\"password\"\r\n        placeholder=\"Confirm Password\"\r\n        value={confirmPassword}\r\n        onChange={(e) => setConfirmPassword(e.target.value)}\r\n        required\r\n      />\r\n      <FormInput\r\n        type=\"tel\"\r\n        placeholder=\"Phone Number (Optional)\"\r\n        value={phone}\r\n        onChange={(e) => setPhone(e.target.value)}\r\n      />\r\n      <CountryDropdown\r\n        label=\"Country\"\r\n        value={country}\r\n        onChange={handleCountryChange}\r\n        countries={countries}\r\n      />\r\n      <Button onClick={handleSignup} disabled={loading}>\r\n        {loading ? 'Signing up...' : 'Sign Up'}\r\n      </Button>\r\n      <button onClick={handleSignInWithGoogle}>Sign in with Google</button>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      <p>\r\n        Already have an account? <Link to=\"/login\">Log In</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignupPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}