{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thoma\\\\Documents\\\\Code\\\\sb-digital-legacy-v2.1\\\\frontend\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from '../components/Button';\nimport FormInput from '../components/FormInput';\nimport supabase from '../supabaseClient'; // Default export\nimport { signInWithGoogle } from '../supabaseClient'; // Named export\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleLogin = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const {\n        error: signInError\n      } = await supabase.auth.signInWithPassword({\n        email,\n        password\n      });\n      if (signInError) {\n        setError(signInError.message);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSignInWithGoogle = async () => {\n    setError(null); // Reset error before starting\n    try {\n      const {\n        error: googleSignInError\n      } = await signInWithGoogle(); // Use the named export\n      if (googleSignInError) {\n        console.error('Error signing in with Google:', googleSignInError);\n        setError(googleSignInError.message); // Set the error state\n      } else {\n        // Supabase handles redirect, no need to do anything here in most cases\n        console.log('Redirecting to Google for sign-in...');\n      }\n    } catch (err) {\n      setError(\"An unexpected error occurred\");\n      console.error(\"Unexpected error during Google sign-in\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleLogin,\n      disabled: loading,\n      children: loading ? 'Logging in...' : 'Log In'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignInWithGoogle,\n      children: \"Sign in with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"RRuC0onuwuzTc5XidkrNJRYaOH4=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","Link","Button","FormInput","supabase","signInWithGoogle","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","loading","setLoading","error","setError","handleLogin","signInError","auth","signInWithPassword","message","err","handleSignInWithGoogle","googleSignInError","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","className","to","_c","$RefreshReg$"],"sources":["C:/Users/thoma/Documents/Code/sb-digital-legacy-v2.1/frontend/src/pages/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '../components/Button';\r\nimport FormInput from '../components/FormInput';\r\nimport supabase from '../supabaseClient'; // Default export\r\nimport { signInWithGoogle } from '../supabaseClient'; // Named export\r\n\r\nfunction LoginPage() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleLogin = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const { error: signInError } = await supabase.auth.signInWithPassword({\r\n        email,\r\n        password,\r\n      });\r\n\r\n      if (signInError) {\r\n        setError(signInError.message);\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSignInWithGoogle = async () => {\r\n    setError(null); // Reset error before starting\r\n    try {\r\n      const { error: googleSignInError } = await signInWithGoogle(); // Use the named export\r\n      if (googleSignInError) {\r\n        console.error('Error signing in with Google:', googleSignInError);\r\n        setError(googleSignInError.message); // Set the error state\r\n      } else {\r\n        // Supabase handles redirect, no need to do anything here in most cases\r\n        console.log('Redirecting to Google for sign-in...');\r\n      }\r\n    } catch (err) {\r\n      setError(\"An unexpected error occurred\");\r\n      console.error(\"Unexpected error during Google sign-in\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Log In</h2>\r\n      <FormInput\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <FormInput\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <Button onClick={handleLogin} disabled={loading}>\r\n        {loading ? 'Logging in...' : 'Log In'}\r\n      </Button>\r\n      <button onClick={handleSignInWithGoogle}>Sign in with Google</button>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      <p>\r\n        Don't have an account? <Link to=\"/signup\">Sign Up</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}