{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thoma\\\\Documents\\\\Code\\\\sb-digital-legacy-v2.1\\\\frontend\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Button from '../components/Button';\nimport FormInput from '../components/FormInput';\nimport supabase from '../supabaseClient';\nimport { signInWithGoogle } from '../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const emailInputRef = useRef(null);\n  const passwordInputRef = useRef(null);\n\n  // Use useCallback to memoize handleLogin\n  const handleLogin = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const {\n        data,\n        error: signInError\n      } = await supabase.auth.signInWithPassword({\n        email,\n        password\n      });\n      if (signInError) {\n        setError(signInError.message);\n      } else {\n        console.log('Login successful:', data);\n        navigate('/dashboard'); // Redirect to dashboard or any other page\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [email, password, navigate]); // Add dependencies to useCallback\n\n  useEffect(() => {\n    // Add event listener to the document to handle Enter key presses globally.\n    const handleGlobalKeyDown = e => {\n      if (e.key === 'Enter') {\n        // Check if the focus is within the email or password input fields.\n        if (document.activeElement === emailInputRef.current || document.activeElement === passwordInputRef.current) {\n          e.preventDefault(); // Prevent any default form submission.\n          handleLogin(); // Trigger the login.\n        }\n      }\n    };\n    document.addEventListener('keydown', handleGlobalKeyDown);\n\n    // Cleanup the event listener when the component unmounts.\n    return () => {\n      document.removeEventListener('keydown', handleGlobalKeyDown);\n    };\n  }, [handleLogin]); //  Include handleLogin in the dependency array\n\n  const handleSignInWithGoogle = async () => {\n    setError(null);\n    try {\n      const {\n        error: googleSignInError\n      } = await signInWithGoogle();\n      if (googleSignInError) {\n        setError(googleSignInError.message);\n      }\n    } catch (err) {\n      setError('Unexpected error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      required: true,\n      ref: emailInputRef // Attach the ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true,\n      ref: passwordInputRef // Attach the ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleLogin,\n      disabled: loading,\n      children: loading ? 'Loading...' : 'Log In'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignInWithGoogle,\n      disabled: loading,\n      children: \"Log In with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"x/efuc43Qm1sAQmLcpKWeRYGoGg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Link","useNavigate","Button","FormInput","supabase","signInWithGoogle","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","loading","setLoading","error","setError","navigate","emailInputRef","passwordInputRef","handleLogin","data","signInError","auth","signInWithPassword","message","console","log","err","handleGlobalKeyDown","e","key","document","activeElement","current","preventDefault","addEventListener","removeEventListener","handleSignInWithGoogle","googleSignInError","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","ref","onClick","disabled","to","_c","$RefreshReg$"],"sources":["C:/Users/thoma/Documents/Code/sb-digital-legacy-v2.1/frontend/src/pages/LoginPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Button from '../components/Button';\r\nimport FormInput from '../components/FormInput';\r\nimport supabase from '../supabaseClient';\r\nimport { signInWithGoogle } from '../supabaseClient';\r\n\r\nfunction LoginPage() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n  const emailInputRef = useRef(null);\r\n  const passwordInputRef = useRef(null);\r\n\r\n  // Use useCallback to memoize handleLogin\r\n  const handleLogin = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const { data, error: signInError } = await supabase.auth.signInWithPassword({\r\n        email,\r\n        password,\r\n      });\r\n\r\n      if (signInError) {\r\n        setError(signInError.message);\r\n      } else {\r\n        console.log('Login successful:', data);\r\n        navigate('/dashboard'); // Redirect to dashboard or any other page\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [email, password, navigate]); // Add dependencies to useCallback\r\n\r\n  useEffect(() => {\r\n    // Add event listener to the document to handle Enter key presses globally.\r\n    const handleGlobalKeyDown = (e) => {\r\n      if (e.key === 'Enter') {\r\n        // Check if the focus is within the email or password input fields.\r\n        if (\r\n          document.activeElement === emailInputRef.current ||\r\n          document.activeElement === passwordInputRef.current\r\n        ) {\r\n          e.preventDefault(); // Prevent any default form submission.\r\n          handleLogin(); // Trigger the login.\r\n        }\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleGlobalKeyDown);\r\n\r\n    // Cleanup the event listener when the component unmounts.\r\n    return () => {\r\n      document.removeEventListener('keydown', handleGlobalKeyDown);\r\n    };\r\n  }, [handleLogin]); //  Include handleLogin in the dependency array\r\n\r\n  const handleSignInWithGoogle = async () => {\r\n    setError(null);\r\n    try {\r\n      const { error: googleSignInError } = await signInWithGoogle();\r\n      if (googleSignInError) {\r\n        setError(googleSignInError.message);\r\n      }\r\n    } catch (err) {\r\n      setError('Unexpected error occurred. Please try again.');\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>Log In</h2>\r\n      <FormInput\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        required\r\n        ref={emailInputRef} // Attach the ref\r\n      />\r\n      <FormInput\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        required\r\n        ref={passwordInputRef} // Attach the ref\r\n      />\r\n      <Button onClick={handleLogin} disabled={loading}>\r\n        {loading ? 'Loading...' : 'Log In'}\r\n      </Button>\r\n      <button onClick={handleSignInWithGoogle} disabled={loading}>\r\n        Log In with Google\r\n      </button>\r\n      {error && <p>{error}</p>}\r\n      <p>\r\n        Don't have an account? <Link to=\"/signup\">Sign Up</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}