{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thoma\\\\Documents\\\\Code\\\\sb-digital-legacy-v2.1\\\\frontend\\\\src\\\\pages\\\\AccountPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../App';\nimport supabase from '../supabaseClient';\nimport FormInput from '../components/FormInput';\nimport Button from '../components/Button';\nimport { signInWithGoogle } from '../supabaseClient';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AccountPage = () => {\n  _s();\n  var _session$user2, _session$user3, _session$user4;\n  const {\n    session\n  } = useAuth();\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [country, setCountry] = useState(''); // Add country state\n  const [countries, setCountries] = useState([]); // State for fetched countries\n  const [fetchError, setFetchError] = useState(null); // State for fetch errors\n  const [loading, setLoading] = useState(true);\n  const [updateLoading, setUpdateLoading] = useState(false);\n  const [updateError, setUpdateError] = useState(null);\n  const [updateSuccess, setUpdateSuccess] = useState(null);\n  const [newEmail, setNewEmail] = useState('');\n  const [updateEmailLoading, setUpdateEmailLoading] = useState(false);\n  const [updateEmailError, setUpdateEmailError] = useState(null);\n  const [updateEmailSuccess, setUpdateEmailSuccess] = useState(null);\n  const [isGoogleUser, setIsGoogleUser] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchCountries = async () => {\n      try {\n        const response = await fetch('https://restcountries.com/v3.1/all');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        const formattedCountries = data.map(c => ({\n          name: c.name.common,\n          code: c.cca2\n        }));\n        setCountries(formattedCountries);\n      } catch (err) {\n        setFetchError(err.message);\n        console.error('Error fetching countries:', err);\n      }\n    };\n    fetchCountries();\n  }, []);\n  useEffect(() => {\n    var _session$user;\n    const fetchUserData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const {\n          data: {\n            user\n          },\n          error: userError\n        } = await supabase.auth.getUser();\n        if (userError) {\n          setError(userError.message);\n          return;\n        }\n        if (user) {\n          var _user$user_metadata, _user$user_metadata2, _user$user_metadata3, _user$user_metadata4, _sessionData$data, _sessionData$data$use, _sessionData$data$use2;\n          setUser(user);\n          setFirstName(((_user$user_metadata = user.user_metadata) === null || _user$user_metadata === void 0 ? void 0 : _user$user_metadata.first_name) || '');\n          setLastName(((_user$user_metadata2 = user.user_metadata) === null || _user$user_metadata2 === void 0 ? void 0 : _user$user_metadata2.last_name) || '');\n          setPhone(((_user$user_metadata3 = user.user_metadata) === null || _user$user_metadata3 === void 0 ? void 0 : _user$user_metadata3.phone) || '');\n          setCountry(((_user$user_metadata4 = user.user_metadata) === null || _user$user_metadata4 === void 0 ? void 0 : _user$user_metadata4.country) || ''); // Load country\n          const sessionData = await supabase.auth.getSession();\n          setIsGoogleUser((sessionData === null || sessionData === void 0 ? void 0 : (_sessionData$data = sessionData.data) === null || _sessionData$data === void 0 ? void 0 : (_sessionData$data$use = _sessionData$data.user) === null || _sessionData$data$use === void 0 ? void 0 : (_sessionData$data$use2 = _sessionData$data$use.identities) === null || _sessionData$data$use2 === void 0 ? void 0 : _sessionData$data$use2.some(id => id.provider === 'google')) || false);\n        }\n      } catch (err) {\n        setError(err.message);\n        console.error('Error fetching user data:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (session !== null && session !== void 0 && (_session$user = session.user) !== null && _session$user !== void 0 && _session$user.id) {\n      fetchUserData();\n    } else {\n      setLoading(false);\n    }\n  }, [session === null || session === void 0 ? void 0 : (_session$user2 = session.user) === null || _session$user2 === void 0 ? void 0 : _session$user2.id]);\n  const goToDashboard = () => {\n    navigate('/dashboard');\n  };\n  const handleCountryChange = event => {\n    setCountry(event.target.value);\n  };\n  const handleUpdateProfile = async () => {\n    setUpdateLoading(true);\n    setUpdateError(null);\n    setUpdateSuccess(null);\n    try {\n      const {\n        error: updateError\n      } = await supabase.auth.updateUser({\n        data: {\n          first_name: firstName,\n          last_name: lastName,\n          phone: phone,\n          country: country // Save country\n        }\n      });\n      if (updateError) {\n        setUpdateError(updateError.message);\n        return;\n      }\n      setUpdateSuccess('Profile updated successfully!');\n      setUser(prevUser => ({\n        ...prevUser,\n        user_metadata: {\n          ...prevUser.user_metadata,\n          first_name: firstName,\n          last_name: lastName,\n          phone: phone,\n          country: country\n        }\n      }));\n    } catch (err) {\n      setUpdateError(err.message);\n      console.error('Error updating profile:', err);\n    } finally {\n      setUpdateLoading(false);\n    }\n  };\n  const handleUpdateEmail = async () => {\n    setUpdateEmailLoading(true);\n    setUpdateEmailError(null);\n    setUpdateEmailSuccess(null);\n    if (!newEmail) {\n      setUpdateEmailError('Please enter a new email address.');\n      setUpdateEmailLoading(false);\n      return;\n    }\n    try {\n      const {\n        error: updateEmailError\n      } = await supabase.auth.updateUser({\n        email: newEmail\n      });\n      if (updateEmailError) {\n        setUpdateEmailError(updateEmailError.message);\n        return;\n      }\n      setUpdateEmailSuccess('Verification email sent to your new address. Please confirm to update.');\n      setNewEmail('');\n    } catch (err) {\n      setUpdateEmailError(err.message);\n      console.error('Error updating email:', err);\n    } finally {\n      setUpdateEmailLoading(false);\n    }\n  };\n  const handleSignInWithGoogle = async () => {\n    setError(null);\n    try {\n      const {\n        error: googleSignInError\n      } = await signInWithGoogle();\n      if (googleSignInError) {\n        setError(googleSignInError.message);\n        console.error('Error signing in with Google:', googleSignInError);\n      } else {\n        console.log('Redirecting to Google for sign-in...');\n      }\n    } catch (err) {\n      setError('Unexpected error during Google sign in');\n      console.error('Unexpected error', err);\n    }\n  };\n  if (!session) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Not authenticated. Redirecting...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 12\n    }, this);\n  }\n  if (loading && !countries.length && !fetchError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading user data and countries...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 12\n    }, this);\n  }\n  if (fetchError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error fetching countries: \", fetchError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User ID: \", session === null || session === void 0 ? void 0 : (_session$user3 = session.user) === null || _session$user3 === void 0 ? void 0 : _session$user3.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        placeholder: \"First Name\",\n        value: firstName,\n        onChange: e => setFirstName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        placeholder: \"Last Name\",\n        value: lastName,\n        onChange: e => setLastName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"tel\",\n        placeholder: \"Phone Number (Optional)\",\n        value: phone,\n        onChange: e => setPhone(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"country\",\n          children: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"country\",\n          name: \"country\",\n          value: country,\n          onChange: handleCountryChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), countries.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: c.code,\n            children: c.name\n          }, c.code, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleUpdateProfile,\n        disabled: updateLoading,\n        children: updateLoading ? 'Updating...' : 'Update Profile'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), updateError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: updateError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 25\n      }, this), updateSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success\",\n        children: updateSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Update Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Email: \", session === null || session === void 0 ? void 0 : (_session$user4 = session.user) === null || _session$user4 === void 0 ? void 0 : _session$user4.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), isGoogleUser ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You cannot change your email address because you are logged in with a\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://myaccount.google.com/\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Google Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"email\",\n          placeholder: \"New Email Address\",\n          value: newEmail,\n          onChange: e => setNewEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleUpdateEmail,\n          disabled: updateEmailLoading,\n          children: updateEmailLoading ? 'Sending Verification...' : 'Update Email'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), updateEmailError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: updateEmailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 34\n        }, this), updateEmailSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"success\",\n          children: updateEmailSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goToDashboard,\n      children: \"Back to Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountPage, \"ep/mTFWlAc1TgNEPfsbNtburIIU=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = AccountPage;\nexport default AccountPage;\nvar _c;\n$RefreshReg$(_c, \"AccountPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useAuth","supabase","FormInput","Button","signInWithGoogle","jsxDEV","_jsxDEV","Fragment","_Fragment","AccountPage","_s","_session$user2","_session$user3","_session$user4","session","navigate","user","setUser","firstName","setFirstName","lastName","setLastName","phone","setPhone","country","setCountry","countries","setCountries","fetchError","setFetchError","loading","setLoading","updateLoading","setUpdateLoading","updateError","setUpdateError","updateSuccess","setUpdateSuccess","newEmail","setNewEmail","updateEmailLoading","setUpdateEmailLoading","updateEmailError","setUpdateEmailError","updateEmailSuccess","setUpdateEmailSuccess","isGoogleUser","setIsGoogleUser","error","setError","fetchCountries","response","fetch","ok","Error","status","data","json","formattedCountries","map","c","name","common","code","cca2","err","message","console","_session$user","fetchUserData","userError","auth","getUser","_user$user_metadata","_user$user_metadata2","_user$user_metadata3","_user$user_metadata4","_sessionData$data","_sessionData$data$use","_sessionData$data$use2","user_metadata","first_name","last_name","sessionData","getSession","identities","some","id","provider","goToDashboard","handleCountryChange","event","target","value","handleUpdateProfile","updateUser","prevUser","handleUpdateEmail","email","handleSignInWithGoogle","googleSignInError","log","children","fileName","_jsxFileName","lineNumber","columnNumber","length","type","placeholder","onChange","e","htmlFor","onClick","disabled","className","href","rel","_c","$RefreshReg$"],"sources":["C:/Users/thoma/Documents/Code/sb-digital-legacy-v2.1/frontend/src/pages/AccountPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../App';\r\nimport supabase from '../supabaseClient';\r\nimport FormInput from '../components/FormInput';\r\nimport Button from '../components/Button';\r\nimport { signInWithGoogle } from '../supabaseClient';\r\n\r\nconst AccountPage = () => {\r\n  const { session } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [user, setUser] = useState(null);\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [country, setCountry] = useState(''); // Add country state\r\n  const [countries, setCountries] = useState([]); // State for fetched countries\r\n  const [fetchError, setFetchError] = useState(null); // State for fetch errors\r\n  const [loading, setLoading] = useState(true);\r\n  const [updateLoading, setUpdateLoading] = useState(false);\r\n  const [updateError, setUpdateError] = useState(null);\r\n  const [updateSuccess, setUpdateSuccess] = useState(null);\r\n  const [newEmail, setNewEmail] = useState('');\r\n  const [updateEmailLoading, setUpdateEmailLoading] = useState(false);\r\n  const [updateEmailError, setUpdateEmailError] = useState(null);\r\n  const [updateEmailSuccess, setUpdateEmailSuccess] = useState(null);\r\n  const [isGoogleUser, setIsGoogleUser] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchCountries = async () => {\r\n      try {\r\n        const response = await fetch('https://restcountries.com/v3.1/all');\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        const formattedCountries = data.map((c) => ({ name: c.name.common, code: c.cca2 }));\r\n        setCountries(formattedCountries);\r\n      } catch (err) {\r\n        setFetchError(err.message);\r\n        console.error('Error fetching countries:', err);\r\n      }\r\n    };\r\n\r\n    fetchCountries();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      try {\r\n        const {\r\n          data: { user },\r\n          error: userError,\r\n        } = await supabase.auth.getUser();\r\n        if (userError) {\r\n          setError(userError.message);\r\n          return;\r\n        }\r\n        if (user) {\r\n          setUser(user);\r\n          setFirstName(user.user_metadata?.first_name || '');\r\n          setLastName(user.user_metadata?.last_name || '');\r\n          setPhone(user.user_metadata?.phone || '');\r\n          setCountry(user.user_metadata?.country || ''); // Load country\r\n          const sessionData = await supabase.auth.getSession();\r\n          setIsGoogleUser(sessionData?.data?.user?.identities?.some(id => id.provider === 'google') || false);\r\n        }\r\n      } catch (err) {\r\n        setError(err.message);\r\n        console.error('Error fetching user data:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (session?.user?.id) {\r\n      fetchUserData();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [session?.user?.id]);\r\n\r\n  const goToDashboard = () => {\r\n    navigate('/dashboard');\r\n  };\r\n\r\n  const handleCountryChange = (event) => {\r\n    setCountry(event.target.value);\r\n  };\r\n\r\n  const handleUpdateProfile = async () => {\r\n    setUpdateLoading(true);\r\n    setUpdateError(null);\r\n    setUpdateSuccess(null);\r\n    try {\r\n      const { error: updateError } = await supabase.auth.updateUser({\r\n        data: {\r\n          first_name: firstName,\r\n          last_name: lastName,\r\n          phone: phone,\r\n          country: country, // Save country\r\n        },\r\n      });\r\n      if (updateError) {\r\n        setUpdateError(updateError.message);\r\n        return;\r\n      }\r\n      setUpdateSuccess('Profile updated successfully!');\r\n      setUser(prevUser => ({\r\n        ...prevUser,\r\n        user_metadata: {\r\n          ...prevUser.user_metadata,\r\n          first_name: firstName,\r\n          last_name: lastName,\r\n          phone: phone,\r\n          country: country,\r\n        },\r\n      }));\r\n    } catch (err) {\r\n      setUpdateError(err.message);\r\n      console.error('Error updating profile:', err);\r\n    } finally {\r\n      setUpdateLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUpdateEmail = async () => {\r\n    setUpdateEmailLoading(true);\r\n    setUpdateEmailError(null);\r\n    setUpdateEmailSuccess(null);\r\n    if (!newEmail) {\r\n      setUpdateEmailError('Please enter a new email address.');\r\n      setUpdateEmailLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const { error: updateEmailError } = await supabase.auth.updateUser({\r\n        email: newEmail,\r\n      });\r\n      if (updateEmailError) {\r\n        setUpdateEmailError(updateEmailError.message);\r\n        return;\r\n      }\r\n      setUpdateEmailSuccess('Verification email sent to your new address. Please confirm to update.');\r\n      setNewEmail('');\r\n    } catch (err) {\r\n      setUpdateEmailError(err.message);\r\n      console.error('Error updating email:', err);\r\n    } finally {\r\n      setUpdateEmailLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSignInWithGoogle = async () => {\r\n    setError(null);\r\n    try {\r\n      const { error: googleSignInError } = await signInWithGoogle();\r\n      if (googleSignInError) {\r\n        setError(googleSignInError.message);\r\n        console.error('Error signing in with Google:', googleSignInError);\r\n      } else {\r\n        console.log('Redirecting to Google for sign-in...');\r\n      }\r\n    } catch (err) {\r\n      setError('Unexpected error during Google sign in');\r\n      console.error('Unexpected error', err);\r\n    }\r\n  };\r\n\r\n  if (!session) {\r\n    return <div>Not authenticated. Redirecting...</div>;\r\n  }\r\n  if (loading && !countries.length && !fetchError) {\r\n    return <div>Loading user data and countries...</div>;\r\n  }\r\n  if (fetchError) {\r\n    return <div>Error fetching countries: {fetchError}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>My Account</h1>\r\n      <p>User ID: {session?.user?.id}</p>\r\n\r\n      <div>\r\n        <h2>Update Profile</h2>\r\n        <FormInput\r\n          type=\"text\"\r\n          placeholder=\"First Name\"\r\n          value={firstName}\r\n          onChange={(e) => setFirstName(e.target.value)}\r\n        />\r\n        <FormInput\r\n          type=\"text\"\r\n          placeholder=\"Last Name\"\r\n          value={lastName}\r\n          onChange={(e) => setLastName(e.target.value)}\r\n        />\r\n        <FormInput\r\n          type=\"tel\"\r\n          placeholder=\"Phone Number (Optional)\"\r\n          value={phone}\r\n          onChange={(e) => setPhone(e.target.value)}\r\n        />\r\n        <div>\r\n          <label htmlFor=\"country\">Country</label>\r\n          <select\r\n            id=\"country\"\r\n            name=\"country\"\r\n            value={country}\r\n            onChange={handleCountryChange}\r\n          >\r\n            <option value=\"\">Select Country</option>\r\n            {countries.map((c) => (\r\n              <option key={c.code} value={c.code}>\r\n                {c.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <Button onClick={handleUpdateProfile} disabled={updateLoading}>\r\n          {updateLoading ? 'Updating...' : 'Update Profile'}\r\n        </Button>\r\n        {updateError && <p className=\"error\">{updateError}</p>}\r\n        {updateSuccess && <p className=\"success\">{updateSuccess}</p>}\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Update Email</h2>\r\n        <p>Current Email: {session?.user?.email}</p>\r\n        {isGoogleUser ? (\r\n          <p>\r\n            You cannot change your email address because you are logged in with a\r\n            <a\r\n              href=\"https://myaccount.google.com/\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Google Account\r\n            </a>.\r\n          </p>\r\n        ) : (\r\n          <>\r\n            <FormInput\r\n              type=\"email\"\r\n              placeholder=\"New Email Address\"\r\n              value={newEmail}\r\n              onChange={(e) => setNewEmail(e.target.value)}\r\n            />\r\n            <Button\r\n              onClick={handleUpdateEmail}\r\n              disabled={updateEmailLoading}\r\n            >\r\n              {updateEmailLoading ? 'Sending Verification...' : 'Update Email'}\r\n            </Button>\r\n            {updateEmailError && <p className=\"error\">{updateEmailError}</p>}\r\n            {updateEmailSuccess && (\r\n              <p className=\"success\">{updateEmailSuccess}</p>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n      <button onClick={goToDashboard}>Back to Dashboard</button>\r\n      {error && <p className=\"error\">{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountPage;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}