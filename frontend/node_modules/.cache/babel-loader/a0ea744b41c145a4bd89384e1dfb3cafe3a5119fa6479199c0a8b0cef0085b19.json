{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thoma\\\\Documents\\\\Code\\\\sb-digital-legacy-v2.1\\\\frontend\\\\src\\\\pages\\\\AccountPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../App';\nimport supabase from '../supabaseClient'; // Default export\nimport FormInput from '../components/FormInput';\nimport Button from '../components/Button';\nimport { signInWithGoogle } from '../supabaseClient'; // Import named export\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccountPage = () => {\n  _s();\n  var _session$user2, _session$user3, _session$user4;\n  const {\n    session\n  } = useAuth();\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [updateLoading, setUpdateLoading] = useState(false);\n  const [updateError, setUpdateError] = useState(null);\n  const [updateSuccess, setUpdateSuccess] = useState(null);\n  const [newEmail, setNewEmail] = useState('');\n  const [updateEmailLoading, setUpdateEmailLoading] = useState(false);\n  const [updateEmailError, setUpdateEmailError] = useState(null);\n  const [updateEmailSuccess, setUpdateEmailSuccess] = useState(null);\n  const [isGoogleUser, setIsGoogleUser] = useState(false); // State to track Google user\n\n  useEffect(() => {\n    var _session$user;\n    const fetchUserData = async () => {\n      setLoading(true);\n      try {\n        const {\n          data: {\n            user\n          },\n          error: userError\n        } = await supabase.auth.getUser();\n        if (user) {\n          var _user$user_metadata, _user$user_metadata2, _user$user_metadata3, _sessionData$user$ide;\n          setUser(user);\n          setFirstName(((_user$user_metadata = user.user_metadata) === null || _user$user_metadata === void 0 ? void 0 : _user$user_metadata.first_name) || '');\n          setLastName(((_user$user_metadata2 = user.user_metadata) === null || _user$user_metadata2 === void 0 ? void 0 : _user$user_metadata2.last_name) || '');\n          setPhone(((_user$user_metadata3 = user.user_metadata) === null || _user$user_metadata3 === void 0 ? void 0 : _user$user_metadata3.phone) || '');\n\n          // Check if the user signed in with Google\n          const sessionData = await supabase.auth.session(); //get current session\n          if (sessionData !== null && sessionData !== void 0 && (_sessionData$user$ide = sessionData.user.identities) !== null && _sessionData$user$ide !== void 0 && _sessionData$user$ide.some(id => id.provider === 'google')) {\n            setIsGoogleUser(true);\n          } else {\n            setIsGoogleUser(false);\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (session !== null && session !== void 0 && (_session$user = session.user) !== null && _session$user !== void 0 && _session$user.id) {\n      fetchUserData();\n    } else {\n      setLoading(false);\n    }\n  }, [session === null || session === void 0 ? void 0 : (_session$user2 = session.user) === null || _session$user2 === void 0 ? void 0 : _session$user2.id]);\n  const goToDashboard = () => {\n    navigate('/dashboard');\n  };\n  const handleUpdateProfile = async () => {\n    setUpdateLoading(true);\n    setUpdateError(null);\n    setUpdateSuccess(null);\n    try {\n      const {\n        data,\n        error\n      } = await supabase.auth.updateUser({\n        data: {\n          first_name: firstName,\n          last_name: lastName,\n          phone: phone\n        }\n      });\n      if (error) {\n        setUpdateError(error.message);\n      } else {\n        setUpdateSuccess('Profile updated successfully!');\n        setUser({\n          ...user,\n          user_metadata: {\n            ...user.user_metadata,\n            first_name: firstName,\n            last_name: lastName,\n            phone: phone\n          }\n        });\n      }\n    } catch (error) {\n      setUpdateError(error.message);\n    } finally {\n      setUpdateLoading(false);\n    }\n  };\n  const handleUpdateEmail = async () => {\n    setUpdateEmailLoading(true);\n    setUpdateEmailError(null);\n    setUpdateEmailSuccess(null);\n    if (!newEmail) {\n      setUpdateEmailError('Please enter a new email address.');\n      setUpdateEmailLoading(false);\n      return;\n    }\n    try {\n      const {\n        data,\n        error\n      } = await supabase.auth.updateUser({\n        email: newEmail\n      });\n      if (error) {\n        setUpdateEmailError(error.message);\n      } else {\n        setUpdateEmailSuccess('Verification email sent to your new address. Please confirm to update.');\n        setNewEmail('');\n      }\n    } catch (error) {\n      setUpdateEmailError(error.message);\n    } finally {\n      setUpdateEmailLoading(false);\n    }\n  };\n  const handleSignInWithGoogle = async () => {\n    setError(null);\n    try {\n      const {\n        error: googleSignInError\n      } = await signInWithGoogle();\n      if (googleSignInError) {\n        console.error('Error signing in with Google:', googleSignInError);\n        setError(googleSignInError.message);\n      } else {\n        console.log('Redirecting to Google for sign-in...');\n      }\n    } catch (err) {\n      setError('Unexpected error during Google sign in');\n      console.error('Unexpected error', err);\n    }\n  };\n  if (!session) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Not authenticated. Redirecting...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 12\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading user data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User ID: \", session === null || session === void 0 ? void 0 : (_session$user3 = session.user) === null || _session$user3 === void 0 ? void 0 : _session$user3.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        placeholder: \"First Name\",\n        value: firstName,\n        onChange: e => setFirstName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        placeholder: \"Last Name\",\n        value: lastName,\n        onChange: e => setLastName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"tel\",\n        placeholder: \"Phone Number (Optional)\",\n        value: phone,\n        onChange: e => setPhone(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleUpdateProfile,\n        disabled: updateLoading,\n        children: updateLoading ? 'Updating...' : 'Update Profile'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), updateError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: updateError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }, this), updateSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success\",\n        children: updateSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Update Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Email: \", session === null || session === void 0 ? void 0 : (_session$user4 = session.user) === null || _session$user4 === void 0 ? void 0 : _session$user4.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        placeholder: \"New Email Address\",\n        value: newEmail,\n        onChange: e => setNewEmail(e.target.value),\n        disabled: isGoogleUser // Disable email change for Google users\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), isGoogleUser && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your email is managed by Google.\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://myaccount.google.com/\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Change it here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), !isGoogleUser && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleUpdateEmail,\n        disabled: updateEmailLoading,\n        children: updateEmailLoading ? 'Sending Verification...' : 'Update Email'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), updateEmailError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: updateEmailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 30\n      }, this), updateEmailSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success\",\n        children: updateEmailSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignInWithGoogle,\n      children: \"Sign in with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goToDashboard,\n      children: \"Back to Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountPage, \"U2Syj38jpg10fwH++x63nim9H7w=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = AccountPage;\nexport default AccountPage;\nvar _c;\n$RefreshReg$(_c, \"AccountPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useAuth","supabase","FormInput","Button","signInWithGoogle","jsxDEV","_jsxDEV","AccountPage","_s","_session$user2","_session$user3","_session$user4","session","navigate","user","setUser","firstName","setFirstName","lastName","setLastName","phone","setPhone","loading","setLoading","updateLoading","setUpdateLoading","updateError","setUpdateError","updateSuccess","setUpdateSuccess","newEmail","setNewEmail","updateEmailLoading","setUpdateEmailLoading","updateEmailError","setUpdateEmailError","updateEmailSuccess","setUpdateEmailSuccess","isGoogleUser","setIsGoogleUser","_session$user","fetchUserData","data","error","userError","auth","getUser","_user$user_metadata","_user$user_metadata2","_user$user_metadata3","_sessionData$user$ide","user_metadata","first_name","last_name","sessionData","identities","some","id","provider","console","goToDashboard","handleUpdateProfile","updateUser","message","handleUpdateEmail","email","handleSignInWithGoogle","setError","googleSignInError","log","err","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","className","href","rel","_c","$RefreshReg$"],"sources":["C:/Users/thoma/Documents/Code/sb-digital-legacy-v2.1/frontend/src/pages/AccountPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../App';\r\nimport supabase from '../supabaseClient'; // Default export\r\nimport FormInput from '../components/FormInput';\r\nimport Button from '../components/Button';\r\nimport { signInWithGoogle } from '../supabaseClient'; // Import named export\r\n\r\nconst AccountPage = () => {\r\n  const { session } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [user, setUser] = useState(null);\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [updateLoading, setUpdateLoading] = useState(false);\r\n  const [updateError, setUpdateError] = useState(null);\r\n  const [updateSuccess, setUpdateSuccess] = useState(null);\r\n  const [newEmail, setNewEmail] = useState('');\r\n  const [updateEmailLoading, setUpdateEmailLoading] = useState(false);\r\n  const [updateEmailError, setUpdateEmailError] = useState(null);\r\n  const [updateEmailSuccess, setUpdateEmailSuccess] = useState(null);\r\n  const [isGoogleUser, setIsGoogleUser] = useState(false); // State to track Google user\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const {\r\n          data: { user },\r\n          error: userError,\r\n        } = await supabase.auth.getUser();\r\n        if (user) {\r\n          setUser(user);\r\n          setFirstName(user.user_metadata?.first_name || '');\r\n          setLastName(user.user_metadata?.last_name || '');\r\n          setPhone(user.user_metadata?.phone || '');\r\n\r\n          // Check if the user signed in with Google\r\n          const sessionData = await supabase.auth.session(); //get current session\r\n          if (sessionData?.user.identities?.some((id) => id.provider === 'google')) {\r\n            setIsGoogleUser(true);\r\n          } else {\r\n            setIsGoogleUser(false);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (session?.user?.id) {\r\n      fetchUserData();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [session?.user?.id]);\r\n\r\n  const goToDashboard = () => {\r\n    navigate('/dashboard');\r\n  };\r\n\r\n  const handleUpdateProfile = async () => {\r\n    setUpdateLoading(true);\r\n    setUpdateError(null);\r\n    setUpdateSuccess(null);\r\n\r\n    try {\r\n      const { data, error } = await supabase.auth.updateUser({\r\n        data: {\r\n          first_name: firstName,\r\n          last_name: lastName,\r\n          phone: phone,\r\n        },\r\n      });\r\n\r\n      if (error) {\r\n        setUpdateError(error.message);\r\n      } else {\r\n        setUpdateSuccess('Profile updated successfully!');\r\n        setUser({\r\n          ...user,\r\n          user_metadata: {\r\n            ...user.user_metadata,\r\n            first_name: firstName,\r\n            last_name: lastName,\r\n            phone: phone,\r\n          },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setUpdateError(error.message);\r\n    } finally {\r\n      setUpdateLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUpdateEmail = async () => {\r\n    setUpdateEmailLoading(true);\r\n    setUpdateEmailError(null);\r\n    setUpdateEmailSuccess(null);\r\n\r\n    if (!newEmail) {\r\n      setUpdateEmailError('Please enter a new email address.');\r\n      setUpdateEmailLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const { data, error } = await supabase.auth.updateUser({\r\n        email: newEmail,\r\n      });\r\n\r\n      if (error) {\r\n        setUpdateEmailError(error.message);\r\n      } else {\r\n        setUpdateEmailSuccess(\r\n          'Verification email sent to your new address. Please confirm to update.'\r\n        );\r\n        setNewEmail('');\r\n      }\r\n    } catch (error) {\r\n      setUpdateEmailError(error.message);\r\n    } finally {\r\n      setUpdateEmailLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSignInWithGoogle = async () => {\r\n    setError(null);\r\n    try {\r\n      const { error: googleSignInError } = await signInWithGoogle();\r\n      if (googleSignInError) {\r\n        console.error('Error signing in with Google:', googleSignInError);\r\n        setError(googleSignInError.message);\r\n      } else {\r\n        console.log('Redirecting to Google for sign-in...');\r\n      }\r\n    } catch (err) {\r\n      setError('Unexpected error during Google sign in');\r\n      console.error('Unexpected error', err);\r\n    }\r\n  };\r\n\r\n  if (!session) {\r\n    return <div>Not authenticated. Redirecting...</div>;\r\n  }\r\n\r\n  if (loading) {\r\n    return <div>Loading user data...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>My Account</h1>\r\n      <p>User ID: {session?.user?.id}</p>\r\n\r\n      <div>\r\n        <h2>Update Profile</h2>\r\n        <FormInput\r\n          type=\"text\"\r\n          placeholder=\"First Name\"\r\n          value={firstName}\r\n          onChange={(e) => setFirstName(e.target.value)}\r\n        />\r\n        <FormInput\r\n          type=\"text\"\r\n          placeholder=\"Last Name\"\r\n          value={lastName}\r\n          onChange={(e) => setLastName(e.target.value)}\r\n        />\r\n        <FormInput\r\n          type=\"tel\"\r\n          placeholder=\"Phone Number (Optional)\"\r\n          value={phone}\r\n          onChange={(e) => setPhone(e.target.value)}\r\n        />\r\n        <Button onClick={handleUpdateProfile} disabled={updateLoading}>\r\n          {updateLoading ? 'Updating...' : 'Update Profile'}\r\n        </Button>\r\n        {updateError && <p className=\"error\">{updateError}</p>}\r\n        {updateSuccess && <p className=\"success\">{updateSuccess}</p>}\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Update Email</h2>\r\n        <p>Current Email: {session?.user?.email}</p>\r\n        <FormInput\r\n          type=\"email\"\r\n          placeholder=\"New Email Address\"\r\n          value={newEmail}\r\n          onChange={(e) => setNewEmail(e.target.value)}\r\n          disabled={isGoogleUser} // Disable email change for Google users\r\n        />\r\n        {isGoogleUser && (\r\n          <p>\r\n            Your email is managed by Google.\r\n            <a\r\n              href=\"https://myaccount.google.com/\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Change it here\r\n            </a>.\r\n          </p>\r\n        )}\r\n        {!isGoogleUser && (\r\n          <Button onClick={handleUpdateEmail} disabled={updateEmailLoading}>\r\n            {updateEmailLoading ? 'Sending Verification...' : 'Update Email'}\r\n          </Button>\r\n        )}\r\n        {updateEmailError && <p className=\"error\">{updateEmailError}</p>}\r\n        {updateEmailSuccess && (\r\n          <p className=\"success\">{updateEmailSuccess}</p>\r\n        )}\r\n      </div>\r\n      <button onClick={handleSignInWithGoogle}>Sign in with Google</button>\r\n      <button onClick={goToDashboard}>Back to Dashboard</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}