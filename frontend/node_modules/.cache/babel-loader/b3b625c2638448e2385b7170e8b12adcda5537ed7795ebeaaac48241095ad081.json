{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thoma\\\\Documents\\\\Code\\\\sb-digital-legacy-v2.1\\\\frontend\\\\src\\\\pages\\\\AccountPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../App';\nimport { supabase } from './supabaseClient';\nimport FormInput from '../components/FormInput';\nimport Button from '../components/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccountPage = () => {\n  _s();\n  var _session$user2, _session$user3, _session$user4;\n  const {\n    session\n  } = useAuth();\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [updateLoading, setUpdateLoading] = useState(false);\n  const [updateError, setUpdateError] = useState(null);\n  const [updateSuccess, setUpdateSuccess] = useState(null);\n  const [newEmail, setNewEmail] = useState('');\n  const [updateEmailLoading, setUpdateEmailLoading] = useState(false);\n  const [updateEmailError, setUpdateEmailError] = useState(null);\n  const [updateEmailSuccess, setUpdateEmailSuccess] = useState(null);\n  useEffect(() => {\n    var _session$user;\n    const fetchUserData = async () => {\n      setLoading(true);\n      try {\n        const {\n          data: {\n            user\n          }\n        } = await supabase.auth.getUser();\n        if (user) {\n          var _user$user_metadata, _user$user_metadata2, _user$user_metadata3;\n          setUser(user);\n          setFirstName(((_user$user_metadata = user.user_metadata) === null || _user$user_metadata === void 0 ? void 0 : _user$user_metadata.first_name) || '');\n          setLastName(((_user$user_metadata2 = user.user_metadata) === null || _user$user_metadata2 === void 0 ? void 0 : _user$user_metadata2.last_name) || '');\n          setPhone(((_user$user_metadata3 = user.user_metadata) === null || _user$user_metadata3 === void 0 ? void 0 : _user$user_metadata3.phone) || '');\n        }\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (session !== null && session !== void 0 && (_session$user = session.user) !== null && _session$user !== void 0 && _session$user.id) {\n      fetchUserData();\n    } else {\n      setLoading(false);\n    }\n  }, [session === null || session === void 0 ? void 0 : (_session$user2 = session.user) === null || _session$user2 === void 0 ? void 0 : _session$user2.id]);\n  const goToDashboard = () => {\n    navigate('/dashboard');\n  };\n  const handleUpdateProfile = async () => {\n    setUpdateLoading(true);\n    setUpdateError(null);\n    setUpdateSuccess(null);\n    try {\n      const {\n        data,\n        error\n      } = await supabase.auth.updateUser({\n        data: {\n          first_name: firstName,\n          last_name: lastName,\n          phone: phone\n        }\n      });\n      if (error) {\n        setUpdateError(error.message);\n      } else {\n        setUpdateSuccess('Profile updated successfully!');\n        setUser({\n          ...user,\n          user_metadata: {\n            ...user.user_metadata,\n            first_name: firstName,\n            last_name: lastName,\n            phone: phone\n          }\n        });\n      }\n    } catch (error) {\n      setUpdateError(error.message);\n    } finally {\n      setUpdateLoading(false);\n    }\n  };\n  const handleUpdateEmail = async () => {\n    setUpdateEmailLoading(true);\n    setUpdateEmailError(null);\n    setUpdateEmailSuccess(null);\n    if (!newEmail) {\n      setUpdateEmailError('Please enter a new email address.');\n      setUpdateEmailLoading(false);\n      return;\n    }\n    try {\n      const {\n        data,\n        error\n      } = await supabase.auth.updateUser({\n        email: newEmail\n      });\n      if (error) {\n        setUpdateEmailError(error.message);\n      } else {\n        setUpdateEmailSuccess('Verification email sent to your new address. Please confirm to update.');\n        setNewEmail('');\n      }\n    } catch (error) {\n      setUpdateEmailError(error.message);\n    } finally {\n      setUpdateEmailLoading(false);\n    }\n  };\n  if (!session) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Not authenticated. Redirecting...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 12\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading user data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User ID: \", session === null || session === void 0 ? void 0 : (_session$user3 = session.user) === null || _session$user3 === void 0 ? void 0 : _session$user3.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        placeholder: \"First Name\",\n        value: firstName,\n        onChange: e => setFirstName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        placeholder: \"Last Name\",\n        value: lastName,\n        onChange: e => setLastName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"tel\",\n        placeholder: \"Phone Number (Optional)\",\n        value: phone,\n        onChange: e => setPhone(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleUpdateProfile,\n        disabled: updateLoading,\n        children: updateLoading ? 'Updating...' : 'Update Profile'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), updateError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: updateError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }, this), updateSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success\",\n        children: updateSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Update Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Email: \", session === null || session === void 0 ? void 0 : (_session$user4 = session.user) === null || _session$user4 === void 0 ? void 0 : _session$user4.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        placeholder: \"New Email Address\",\n        value: newEmail,\n        onChange: e => setNewEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleUpdateEmail,\n        disabled: updateEmailLoading,\n        children: updateEmailLoading ? 'Sending Verification...' : 'Update Email'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), updateEmailError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: updateEmailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 30\n      }, this), updateEmailSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success\",\n        children: updateEmailSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goToDashboard,\n      children: \"Back to Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountPage, \"Mnbs/as1elClyleijPRLWQOyGiw=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = AccountPage;\nexport default AccountPage;\nvar _c;\n$RefreshReg$(_c, \"AccountPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useAuth","supabase","FormInput","Button","jsxDEV","_jsxDEV","AccountPage","_s","_session$user2","_session$user3","_session$user4","session","navigate","user","setUser","firstName","setFirstName","lastName","setLastName","phone","setPhone","loading","setLoading","updateLoading","setUpdateLoading","updateError","setUpdateError","updateSuccess","setUpdateSuccess","newEmail","setNewEmail","updateEmailLoading","setUpdateEmailLoading","updateEmailError","setUpdateEmailError","updateEmailSuccess","setUpdateEmailSuccess","_session$user","fetchUserData","data","auth","getUser","_user$user_metadata","_user$user_metadata2","_user$user_metadata3","user_metadata","first_name","last_name","error","console","id","goToDashboard","handleUpdateProfile","updateUser","message","handleUpdateEmail","email","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","className","_c","$RefreshReg$"],"sources":["C:/Users/thoma/Documents/Code/sb-digital-legacy-v2.1/frontend/src/pages/AccountPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../App';\r\nimport { supabase } from './supabaseClient';\r\nimport FormInput from '../components/FormInput';\r\nimport Button from '../components/Button';\r\n\r\nconst AccountPage = () => {\r\n  const { session } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [user, setUser] = useState(null);\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [updateLoading, setUpdateLoading] = useState(false);\r\n  const [updateError, setUpdateError] = useState(null);\r\n  const [updateSuccess, setUpdateSuccess] = useState(null);\r\n  const [newEmail, setNewEmail] = useState('');\r\n  const [updateEmailLoading, setUpdateEmailLoading] = useState(false);\r\n  const [updateEmailError, setUpdateEmailError] = useState(null);\r\n  const [updateEmailSuccess, setUpdateEmailSuccess] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const { data: { user } } = await supabase.auth.getUser();\r\n        if (user) {\r\n          setUser(user);\r\n          setFirstName(user.user_metadata?.first_name || '');\r\n          setLastName(user.user_metadata?.last_name || '');\r\n          setPhone(user.user_metadata?.phone || '');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (session?.user?.id) {\r\n      fetchUserData();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [session?.user?.id]);\r\n\r\n  const goToDashboard = () => {\r\n    navigate('/dashboard');\r\n  };\r\n\r\n  const handleUpdateProfile = async () => {\r\n    setUpdateLoading(true);\r\n    setUpdateError(null);\r\n    setUpdateSuccess(null);\r\n\r\n    try {\r\n      const { data, error } = await supabase.auth.updateUser({\r\n        data: {\r\n          first_name: firstName,\r\n          last_name: lastName,\r\n          phone: phone,\r\n        },\r\n      });\r\n\r\n      if (error) {\r\n        setUpdateError(error.message);\r\n      } else {\r\n        setUpdateSuccess('Profile updated successfully!');\r\n        setUser({ ...user, user_metadata: { ...user.user_metadata, first_name: firstName, last_name: lastName, phone: phone } });\r\n      }\r\n    } catch (error) {\r\n      setUpdateError(error.message);\r\n    } finally {\r\n      setUpdateLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUpdateEmail = async () => {\r\n    setUpdateEmailLoading(true);\r\n    setUpdateEmailError(null);\r\n    setUpdateEmailSuccess(null);\r\n\r\n    if (!newEmail) {\r\n      setUpdateEmailError('Please enter a new email address.');\r\n      setUpdateEmailLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const { data, error } = await supabase.auth.updateUser({\r\n        email: newEmail,\r\n      });\r\n\r\n      if (error) {\r\n        setUpdateEmailError(error.message);\r\n      } else {\r\n        setUpdateEmailSuccess('Verification email sent to your new address. Please confirm to update.');\r\n        setNewEmail('');\r\n      }\r\n    } catch (error) {\r\n      setUpdateEmailError(error.message);\r\n    } finally {\r\n      setUpdateEmailLoading(false);\r\n    }\r\n  };\r\n\r\n  if (!session) {\r\n    return <div>Not authenticated. Redirecting...</div>;\r\n  }\r\n\r\n  if (loading) {\r\n    return <div>Loading user data...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>My Account</h1>\r\n      <p>User ID: {session?.user?.id}</p>\r\n\r\n      <div>\r\n        <h2>Update Profile</h2>\r\n        <FormInput\r\n          type=\"text\"\r\n          placeholder=\"First Name\"\r\n          value={firstName}\r\n          onChange={(e) => setFirstName(e.target.value)}\r\n        />\r\n        <FormInput\r\n          type=\"text\"\r\n          placeholder=\"Last Name\"\r\n          value={lastName}\r\n          onChange={(e) => setLastName(e.target.value)}\r\n        />\r\n        <FormInput\r\n          type=\"tel\"\r\n          placeholder=\"Phone Number (Optional)\"\r\n          value={phone}\r\n          onChange={(e) => setPhone(e.target.value)}\r\n        />\r\n        <Button onClick={handleUpdateProfile} disabled={updateLoading}>\r\n          {updateLoading ? 'Updating...' : 'Update Profile'}\r\n        </Button>\r\n        {updateError && <p className=\"error\">{updateError}</p>}\r\n        {updateSuccess && <p className=\"success\">{updateSuccess}</p>}\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Update Email</h2>\r\n        <p>Current Email: {session?.user?.email}</p>\r\n        <FormInput\r\n          type=\"email\"\r\n          placeholder=\"New Email Address\"\r\n          value={newEmail}\r\n          onChange={(e) => setNewEmail(e.target.value)}\r\n        />\r\n        <Button onClick={handleUpdateEmail} disabled={updateEmailLoading}>\r\n          {updateEmailLoading ? 'Sending Verification...' : 'Update Email'}\r\n        </Button>\r\n        {updateEmailError && <p className=\"error\">{updateEmailError}</p>}\r\n        {updateEmailSuccess && <p className=\"success\">{updateEmailSuccess}</p>}\r\n      </div>\r\n\r\n      <button onClick={goToDashboard}>Back to Dashboard</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}